#debug: true
#logging:
#    level:
#        root: debug
#        tech:
#            wetech:
#                admin:
#                    mapper: trace
server:
    port: 8080
    servlet:
        context-path: /
spring:
    datasource:
        driver-class-name: com.mysql.jdbc.Driver
        type: com.alibaba.druid.pool.DruidDataSource
        password: 63559627
        url: jdbc:mysql://db:3306/xinchou?useSSL=false&serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8
        username: root
    
    druid:
        initial-size: 1
        max-active: 20
        min-idle: 1
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,log4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
        # 配置DruidStatFilter
        web-stat-filter:
            enabled: true
            url-pattern: "/*"
            exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
              
        # 配置DruidStatViewServlet
        stat-view-servlet:
            url-pattern: "/druid/*"
            # IP白名单(没有配置或者为空，则允许所有访问)
            allow: 127.0.0.1,10.136.31.130
            # IP黑名单 (存在共同时，deny优先于allow)
            deny: 192.168.1.73
            #  禁用HTML页面上的“Reset All”功能
            reset-enable: false
            # 登录名
            login-username: admin
            # 登录密码
            login-password: 123456
        aop-patterns: tech.wetech.admin.modules.system.web.*
        test-on-borrow: true
      
    #JPA
    jpa:
        database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
        hibernate:
            #可选参数 
            #create 启动时删数据库中的表，然后创建，退出时不删除数据表 
            #create-drop 启动时删数据库中的表，然后创建，退出时删除数据表 如果表不存在报错 
            #update 如果启动时表格式不一致则更新表，原有数据保留 
            #validate 项目启动表结构进行校验 如果不一致则报错
            #none 则不进行任何操作
            ddl-auto: update
        show-sql: false
        
    thymeleaf:
        cache: true